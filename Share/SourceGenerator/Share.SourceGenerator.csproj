<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>11</LangVersion>
    
    <RootNamespace>WorldTree.SourceGenerator</RootNamespace>
    
    <!--执行扩展分析器规则-->
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>

    <!--用于控制构建输出是否应复制到发布文件夹。-->
    <IncludeBuildOutput>false</IncludeBuildOutput>

    <!--设置包是否为开发依赖项。true表示开发依赖,它只会用于项目开发和编译,但不会流入发布的部署包中。-->
    <DevelopmentDependency>true</DevelopmentDependency>

    <!--控制发布文件夹是否包含符号文件(.pdb)。false表示不包含符号文件,可以减小发布大小。-->
    <IncludeSymbols>false</IncludeSymbols>
    
    <!--是否将目标框架 appending 到输出路径。false表示不添加,输出与框架无关。-->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>

  <ItemGroup>
    
    <!--对于 Microsoft.CodeAnalysis.CSharp 包:PrivateAssets="all" 表示这个包的所有资产都是私有的,都不会流向依赖项目。-->
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.8.0" PrivateAssets="all" />

    
    <!--对于 Microsoft.CodeAnalysis.Analyzers 包: -->
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.3">
      <!--PrivateAssets=all 同样表示包的所有资产都是私有的。-->
      <PrivateAssets>all</PrivateAssets>
      
      <!--<IncludeAssets>元素用于选择性地公开私有资产-->
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
	        <Copy SourceFiles="$(TargetDir)/$(TargetName).dll" DestinationFolder="$(ProjectDir)/../../Unity/Assets/Plugins/" ContinueOnError="false" />
	   </Target>
  
</Project>
